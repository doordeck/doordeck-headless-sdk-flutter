name: Flutter build and create tag
on:
  workflow_dispatch:

jobs:
  release-tag:
    name: Fetch release tag
    runs-on: ubuntu-latest
    outputs:
      latest-tag: ${{ steps.release-tag.outputs.LATEST_TAG }}
      tag-exists: ${{ steps.check-tag.outputs.TAG_EXISTS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Release Tag
        id: release-tag
        run: |
          LATEST_TAG_V=$(git ls-remote --tags --refs --sort=-v:refname https://github.com/doordeck/doordeck-headless-sdk.git | awk -F'/' '{print $3}' | sed 's/\^{}//' | sort -V | tail -n1)
          LATEST_TAG=${LATEST_TAG_V#v}
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "LATEST_TAG=$LATEST_TAG"

      - name: Check if tag exists in current repo
        id: check-tag
        run: |
          TAG_EXISTS=$(git tag -l "v${{ steps.release-tag.outputs.LATEST_TAG }}")
          if [ -z "$TAG_EXISTS" ]; then
            echo "TAG_EXISTS=false" >> $GITHUB_OUTPUT
          else
            echo "Tag already exists: v${{ steps.release-tag.outputs.LATEST_TAG }}"
            echo "TAG_EXISTS=true" >> $GITHUB_OUTPUT
          fi

  flutter-version:
    name: Parse Flutter's version
    runs-on: ubuntu-latest
    needs: release-tag
    if: needs.release-tag.outputs.tag-exists == 'false'
    outputs:
      flutter-version: ${{ steps.flutter-version.outputs.FLUTTER_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Flutter version
        id: flutter-version
        run: |
          FLUTTER_VERSION=$(jq -r .flutter .fvmrc)
          echo "FLUTTER_VERSION=$FLUTTER_VERSION" >> $GITHUB_OUTPUT


  build-android:
    needs: [release-tag, flutter-version]
    runs-on: ubuntu-latest
    if: needs.release-tag.outputs.tag-exists == 'false'
    env:
      DOORDECK_SDK_VERSION: ${{ needs.release-tag.outputs.latest-tag }}
      FLUTTER_VERSION: ${{ needs.flutter-version.outputs.flutter-version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Analyze Dart code
        run: |
          cd example
          flutter analyze

      - name: Get dependencies
        run: |
          cd example
          flutter pub get

      - name: Build for Android
        run: |
          cd example
          flutter build apk --debug


  build-ios:
    needs: [release-tag, flutter-version]
    runs-on: macos-latest
    if: needs.release-tag.outputs.tag-exists == 'false'
    env:
      DOORDECK_SDK_VERSION: ${{ needs.release-tag.outputs.latest-tag }}
      FLUTTER_VERSION: ${{ needs.flutter-version.outputs.flutter-version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Analyze Dart code
        run: flutter analyze

      - name: Install pods
        run: |
          cd example/ios
          pod install

      - name: Build for iOS (simulator)
        run: |
          cd example
          flutter build ios --simulator

  tag-release:
    name: Create tag
    needs: [release-tag, build-android, build-ios]
    if: needs.release-tag.outputs.tag-exists == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ needs.release-tag.outputs.latest-tag }}
          git push origin v${{ needs.release-tag.outputs.latest-tag }}
